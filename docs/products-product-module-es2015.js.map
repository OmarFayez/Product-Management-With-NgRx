{"version":3,"sources":["./src/app/products/product-edit/product-edit.component.ts","./src/app/products/product-edit/product-edit.component.html","./src/app/products/product-list/product-list.component.ts","./src/app/products/product-list/product-list.component.html","./src/app/products/product-shell/product-shell.component.ts","./src/app/products/product-shell/product-shell.component.html","./src/app/products/product.module.ts","./src/app/products/product.service.ts","./src/app/products/state/actions/index.ts","./src/app/products/state/actions/product-api.actions.ts","./src/app/products/state/actions/product-page.actions.ts","./src/app/products/state/index.ts","./src/app/products/state/product.effects.ts","./src/app/products/state/product.reducer.ts","./src/app/shared/generic-validator.ts","./src/app/shared/number.validator.ts"],"names":[],"mappings":"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","file":"products-product-module-es2015.js","sourcesContent":["import {\n  Component,\n  OnInit,\n  Input,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { Product } from '../product';\nimport { GenericValidator } from '../../shared/generic-validator';\nimport { NumberValidators } from '../../shared/number.validator';\n\n@Component({\n  selector: 'pm-product-edit',\n  templateUrl: './product-edit.component.html',\n})\nexport class ProductEditComponent implements OnInit, OnChanges {\n  pageTitle = 'Product Edit';\n  @Input() errorMessage: string;\n  @Input() selectedProduct: Product;\n  @Output() create = new EventEmitter<Product>();\n  @Output() update = new EventEmitter<Product>();\n  @Output() delete = new EventEmitter<Product>();\n  @Output() clearCurrent = new EventEmitter<void>();\n\n  productForm: FormGroup;\n\n  // Use with the generic validation message class\n  displayMessage: { [key: string]: string } = {};\n  private validationMessages: { [key: string]: { [key: string]: string } };\n  private genericValidator: GenericValidator;\n\n  constructor(private fb: FormBuilder) {\n    // Defines all of the validation messages for the form.\n    // These could instead be retrieved from a file or database.\n    this.validationMessages = {\n      productName: {\n        required: 'Product name is required.',\n        minlength: 'Product name must be at least three characters.',\n        maxlength: 'Product name cannot exceed 50 characters.',\n      },\n      productCode: {\n        required: 'Product code is required.',\n      },\n      starRating: {\n        range: 'Rate the product between 1 (lowest) and 5 (highest).',\n      },\n    };\n\n    // Define an instance of the validator for use with this form,\n    // passing in this form's set of validation messages.\n    this.genericValidator = new GenericValidator(this.validationMessages);\n  }\n\n  ngOnInit(): void {\n    // Define the form group\n    this.productForm = this.fb.group({\n      productName: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(50),\n        ],\n      ],\n      productCode: ['', Validators.required],\n      starRating: ['', NumberValidators.range(1, 5)],\n      description: '',\n    });\n\n    // Watch for value changes for validation\n    this.productForm.valueChanges.subscribe(\n      () =>\n        (this.displayMessage = this.genericValidator.processMessages(\n          this.productForm\n        ))\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // patch form with value from the store\n    if (changes.selectedProduct) {\n      const product = changes.selectedProduct.currentValue as Product;\n      this.displayProduct(product);\n    }\n  }\n\n  // Also validate on blur\n  // Helpful if the user tabs through required fields\n  blur(): void {\n    this.displayMessage = this.genericValidator.processMessages(\n      this.productForm\n    );\n  }\n\n  displayProduct(product: Product | null): void {\n    if (product && this.productForm) {\n      // Reset the form back to pristine\n      this.productForm.reset();\n\n      // Display the appropriate page title\n      if (product.id === 0) {\n        this.pageTitle = 'Add Product';\n      } else {\n        this.pageTitle = `Edit Product: ${product.productName}`;\n      }\n\n      // Update the data on the form\n      this.productForm.patchValue({\n        productName: product.productName,\n        productCode: product.productCode,\n        starRating: product.starRating,\n        description: product.description,\n      });\n    }\n  }\n\n  cancelEdit(): void {\n    // Redisplay the currently selected product\n    // replacing any edits made\n    this.displayProduct(this.selectedProduct);\n  }\n\n  deleteProduct(): void {\n    if (this.selectedProduct && this.selectedProduct.id) {\n      if (\n        confirm(\n          `Really delete the product: ${this.selectedProduct.productName}?`\n        )\n      ) {\n        this.delete.emit(this.selectedProduct);\n      }\n    } else {\n      // No need to delete, it was never saved\n      this.clearCurrent.emit();\n    }\n  }\n\n  saveProduct(): void {\n    if (this.productForm.valid) {\n      if (this.productForm.dirty) {\n        // Copy over all of the original product properties\n        // Then copy over the values from the form\n        // This ensures values not on the form, such as the Id, are retained\n        const product = { ...this.selectedProduct, ...this.productForm.value };\n\n        if (product.id === 0) {\n          this.create.emit(product);\n        } else {\n          this.update.emit(product);\n        }\n      }\n    }\n  }\n}\n","<div class=\"card\" *ngIf=\"selectedProduct\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <form novalidate (ngSubmit)=\"saveProduct()\" [formGroup]=\"productForm\">\n      <fieldset>\n        <div class=\"form-group row\">\n          <label class=\"col-md-3 col-form-label\" for=\"productNameId\"\n            >Product Name</label\n          >\n\n          <div class=\"col-md-9\">\n            <input\n              [ngClass]=\"{ 'is-invalid': displayMessage.productName }\"\n              class=\"form-control\"\n              id=\"productNameId\"\n              type=\"text\"\n              placeholder=\"Name (required)\"\n              formControlName=\"productName\"\n              (blur)=\"blur()\"\n            />\n            <span class=\"invalid-feedback\" *ngIf=\"displayMessage.productName\">\n              {{ displayMessage.productName }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label class=\"col-md-3 col-form-label\" for=\"productCodeId\"\n            >Product Code</label\n          >\n\n          <div class=\"col-md-9\">\n            <input\n              [ngClass]=\"{ 'is-invalid': displayMessage.productCode }\"\n              class=\"form-control\"\n              id=\"productCodeId\"\n              type=\"text\"\n              placeholder=\"Code (required)\"\n              formControlName=\"productCode\"\n              (blur)=\"blur()\"\n            />\n            <span class=\"invalid-feedback\" *ngIf=\"displayMessage.productCode\">\n              {{ displayMessage.productCode }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label class=\"col-md-3 col-form-label\" for=\"starRatingId\"\n            >Star Rating (1-5)</label\n          >\n\n          <div class=\"col-md-9\">\n            <input\n              [ngClass]=\"{ 'is-invalid': displayMessage.starRating }\"\n              class=\"form-control\"\n              id=\"starRatingId\"\n              type=\"text\"\n              placeholder=\"Rating\"\n              formControlName=\"starRating\"\n            />\n            <span class=\"invalid-feedback\" *ngIf=\"displayMessage.starRating\">\n              {{ displayMessage.starRating }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group row\">\n          <label class=\"col-md-3 col-form-label\" for=\"descriptionId\"\n            >Description</label\n          >\n\n          <div class=\"col-md-9\">\n            <textarea\n              [ngClass]=\"{ 'is-invalid': displayMessage.description }\"\n              class=\"form-control\"\n              id=\"descriptionId\"\n              placeholder=\"Description\"\n              rows=\"3\"\n              formControlName=\"description\"\n            >\n            </textarea>\n            <span class=\"invalid-feedback\" *ngIf=\"displayMessage.description\">\n              {{ displayMessage.description }}\n            </span>\n          </div>\n        </div>\n\n        <div class=\"form-group\">\n          <div class=\"col-md-10 col-md-offset-2\">\n            <span>\n              <button\n                class=\"btn btn-primary\"\n                type=\"submit\"\n                style=\"min-width: 120px; margin-right: 10px\"\n                [disabled]=\"!productForm.valid || !productForm.dirty\"\n              >\n                Save\n              </button>\n            </span>\n            <span>\n              <button\n                class=\"btn btn-light\"\n                type=\"button\"\n                style=\"min-width: 120px; margin-right: 10px\"\n                (click)=\"cancelEdit()\"\n              >\n                Cancel\n              </button>\n            </span>\n            <span>\n              <button\n                class=\"btn btn-light\"\n                type=\"button\"\n                style=\"min-width: 120px\"\n                (click)=\"deleteProduct()\"\n              >\n                Delete\n              </button>\n            </span>\n          </div>\n        </div>\n      </fieldset>\n    </form>\n  </div>\n</div>\n<div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { Product } from '../product';\n\n@Component({\n  selector: 'pm-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductListComponent {\n  pageTitle = 'Products';\n\n  @Input() errorMessage: string;\n  @Input() products: Product[];\n  @Input() displayCode: boolean;\n  @Input() selectedProduct: Product;\n  @Output() displayCodeChanged = new EventEmitter<void>();\n  @Output() initializeNewProduct = new EventEmitter<void>();\n  @Output() productWasSelected = new EventEmitter<Product>();\n\n  checkChanged(): void {\n    this.displayCodeChanged.emit();\n  }\n\n  newProduct(): void {\n    this.initializeNewProduct.emit();\n  }\n\n  productSelected(product: Product): void {\n    this.productWasSelected.emit(product);\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n\n  <div class=\"card-body\" *ngIf=\"products\">\n    <div class=\"list-group\">\n      <button\n        class=\"list-group-item list-group-item-action rounded-0\"\n        *ngFor=\"let product of products\"\n        [ngClass]=\"{ active: product?.id === selectedProduct?.id }\"\n        (click)=\"productSelected(product)\"\n      >\n        {{ product.productName }}\n        <ng-container *ngIf=\"displayCode\">\n          ({{ product.productCode }})\n        </ng-container>\n      </button>\n    </div>\n  </div>\n\n  <div class=\"card-footer\">\n    <div class=\"row\">\n      <div class=\"form-check col-md-7\">\n        <label>\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            (change)=\"checkChanged()\"\n            [checked]=\"displayCode\"\n          />\n          Display Product Code\n        </label>\n      </div>\n      <div class=\"col-md-4 text-right\">\n        <button\n          style=\"min-width: 120px\"\n          class=\"btn btn-primary\"\n          (click)=\"newProduct()\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\n  Error: {{ errorMessage }}\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { Product } from '../product';\n\n/* NgRx */\nimport { Store } from '@ngrx/store';\nimport {\n  State,\n  getShowProductCode,\n  getCurrentProduct,\n  getProducts,\n  getError,\n} from '../state';\n\nimport { ProductPageActions } from '../state/actions';\n\n@Component({\n  templateUrl: './product-shell.component.html',\n})\nexport class ProductShellComponent implements OnInit {\n  displayCode$: Observable<boolean>;\n  selectedProduct$: Observable<Product>;\n  products$: Observable<Product[]>;\n  errorMessage$: Observable<string>;\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit(): void {\n    // Do NOT subscribe here because it uses an async pipe\n    // This gets the initial values until the load is complete.\n    this.products$ = this.store.select(getProducts);\n\n    // Do NOT subscribe here because it uses an async pipe\n    this.errorMessage$ = this.store.select(getError);\n\n    this.store.dispatch(ProductPageActions.loadProducts());\n\n    // Do NOT subscribe here because it uses an async pipe\n    this.selectedProduct$ = this.store.select(getCurrentProduct);\n\n    // Do NOT subscribe here because it uses an async pipe\n    this.displayCode$ = this.store.select(getShowProductCode);\n  }\n\n  checkChanged(): void {\n    this.store.dispatch(ProductPageActions.toggleProductCode());\n  }\n\n  newProduct(): void {\n    this.store.dispatch(ProductPageActions.initializeCurrentProduct());\n  }\n\n  productSelected(product: Product): void {\n    this.store.dispatch(\n      ProductPageActions.setCurrentProduct({ currentProductId: product.id })\n    );\n  }\n\n  deleteProduct(product: Product): void {\n    this.store.dispatch(\n      ProductPageActions.deleteProduct({ productId: product.id })\n    );\n  }\n\n  clearProduct(): void {\n    this.store.dispatch(ProductPageActions.clearCurrentProduct());\n  }\n  saveProduct(product: Product): void {\n    this.store.dispatch(ProductPageActions.createProduct({ product }));\n  }\n\n  updateProduct(product: Product): void {\n    this.store.dispatch(ProductPageActions.updateProduct({ product }));\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-4\">\n    <pm-product-list\n      [displayCode]=\"displayCode$ | async\"\n      [products]=\"products$ | async\"\n      [selectedProduct]=\"selectedProduct$ | async\"\n      [errorMessage]=\"errorMessage$ | async\"\n      (displayCodeChanged)=\"checkChanged()\"\n      (initializeNewProduct)=\"newProduct()\"\n      (productWasSelected)=\"productSelected($any($event))\"\n    ></pm-product-list>\n  </div>\n  <div class=\"col-md-8\">\n    <pm-product-edit\n      [selectedProduct]=\"selectedProduct$ | async\"\n      [errorMessage]=\"errorMessage$ | async\"\n      (clearCurrent)=\"clearProduct()\"\n      (update)=\"updateProduct($any($event))\"\n      (delete)=\"deleteProduct($any($event))\"\n      (create)=\"saveProduct($any($event))\"\n    ></pm-product-edit>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { ProductShellComponent } from './product-shell/product-shell.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductEditComponent } from './product-edit/product-edit.component';\n\n/* NgRx */\nimport { StoreModule } from '@ngrx/store';\nimport { productReducer } from './state/product.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ProductEffects } from './state/product.effects';\n\nconst productRoutes: Routes = [{ path: '', component: ProductShellComponent }];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(productRoutes),\n    StoreModule.forFeature('products', productReducer),\n    EffectsModule.forFeature([ProductEffects]),\n  ],\n  declarations: [\n    ProductShellComponent,\n    ProductListComponent,\n    ProductEditComponent,\n  ],\n})\nexport class ProductModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap, map } from 'rxjs/operators';\n\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  private productsUrl = 'api/products';\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>(this.productsUrl).pipe(\n      tap((data) => console.log(JSON.stringify(data))),\n      catchError(this.handleError)\n    );\n  }\n\n  createProduct(product: Product): Observable<Product> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    // Product Id must be null for the Web API to assign an Id\n    const newProduct = { ...product, id: null };\n    return this.http\n      .post<Product>(this.productsUrl, newProduct, { headers })\n      .pipe(\n        tap((data) => console.log('createProduct: ' + JSON.stringify(data))),\n        catchError(this.handleError)\n      );\n  }\n\n  deleteProduct(id: number): Observable<{}> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = `${this.productsUrl}/${id}`;\n    return this.http.delete<Product>(url, { headers }).pipe(\n      tap((data) => console.log('deleteProduct: ' + id)),\n      catchError(this.handleError)\n    );\n  }\n\n  updateProduct(product: Product): Observable<Product> {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    const url = `${this.productsUrl}/${product.id}`;\n    return this.http.put<Product>(url, product, { headers }).pipe(\n      tap(() => console.log('updateProduct: ' + product.id)),\n      // Return the product on an update\n      map(() => product),\n      catchError(this.handleError)\n    );\n  }\n\n  private handleError(err: any) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage: string;\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      errorMessage = `Backend returned code ${err.status}: ${err.body.error}`;\n    }\n    console.error(err);\n    return throwError(errorMessage);\n  }\n}\n","import * as ProductPageActions from './product-page.actions';\nimport * as ProductApiActions from './product-api.actions';\n\nexport { ProductPageActions, ProductApiActions };\n","import { Product } from '../../product';\n\n/* NgRx*/\nimport { createAction, props } from '@ngrx/store';\n\nexport const loadProductsSuccess = createAction(\n  '[Product API] Load Success',\n  props<{ products: Product[] }>()\n);\n\nexport const loadProductsFailure = createAction(\n  '[Product API] Load Fail',\n  props<{ error: string }>()\n);\n\nexport const updateProductSuccess = createAction(\n  '[Product API] Update Product Success',\n  props<{ product: Product }>()\n);\n\nexport const updateProductFailure = createAction(\n  '[Product API] Update Product Fail',\n  props<{ error: string }>()\n);\n\nexport const createProductSuccess = createAction(\n  '[Product API] Create Product Success',\n  props<{ product: Product }>()\n);\n\nexport const createProductFailure = createAction(\n  '[Product API] Create Product Fail',\n  props<{ error: string }>()\n);\n\nexport const deleteProductSuccess = createAction(\n  '[Product API] Delete Product Success',\n  props<{ productId: number }>()\n);\n\nexport const deleteProductFailure = createAction(\n  '[Product API] Delete Product Fail',\n  props<{ error: string }>()\n);\n","import { Product } from '../../product';\n\n/* NgRx*/\nimport { createAction, props } from '@ngrx/store';\n\nexport const toggleProductCode = createAction(\n  '[Product Page] Toggle Product Code'\n);\n\nexport const setCurrentProduct = createAction(\n  '[Product Page] Set Current Product',\n  props<{ currentProductId: number }>()\n);\n\nexport const clearCurrentProduct = createAction(\n  '[Product Page] Clear Current Product'\n);\n\nexport const initializeCurrentProduct = createAction(\n  '[Product Page] Initialize Current Product'\n);\n\nexport const loadProducts = createAction('[Product Page] Load');\n\nexport const updateProduct = createAction(\n  '[Product Page] Update Product',\n  props<{ product: Product }>()\n);\n\nexport const createProduct = createAction(\n  '[Product Page] Create Product',\n  props<{ product: Product }>()\n);\n\nexport const deleteProduct = createAction(\n  '[Product Page] Delete Product',\n  props<{ productId: number }>()\n);\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport * as AppState from '../../state/app.state';\nimport { ProductState } from './product.reducer';\n\n// Extends the app state to include the product feature.\n// This is required because products are lazy loaded.\n// So the reference to ProductState cannot be added to app.state.ts directly.\nexport interface State extends AppState.State {\n  products: ProductState;\n}\n\n// Selector functions\nconst getProductFeatureState = createFeatureSelector<ProductState>('products');\n\nexport const getShowProductCode = createSelector(\n  getProductFeatureState,\n  (state) => state.showProductCode\n);\n\nexport const getCurrentProductId = createSelector(\n  getProductFeatureState,\n  (state) => state.currentProductId\n);\n\nexport const getCurrentProduct = createSelector(\n  getProductFeatureState,\n  getCurrentProductId,\n  (state, currentProductId) => {\n    if (currentProductId === 0) {\n      return {\n        id: 0,\n        productName: '',\n        productCode: 'New',\n        description: '',\n        starRating: 0,\n      };\n    } else {\n      return currentProductId\n        ? state.products.find((p) => p.id === currentProductId)\n        : null;\n    }\n  }\n);\n\nexport const getProducts = createSelector(\n  getProductFeatureState,\n  (state) => state.products\n);\n\nexport const getError = createSelector(\n  getProductFeatureState,\n  (state) => state.error\n);\n","import { Injectable } from '@angular/core';\n\nimport { mergeMap, map, catchError, concatMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { ProductService } from '../product.service';\n\n/* NgRx */\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ProductPageActions, ProductApiActions } from './actions';\n\n@Injectable()\nexport class ProductEffects {\n  constructor(\n    private actions$: Actions,\n    private productService: ProductService\n  ) {}\n\n  loadProducts$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductPageActions.loadProducts),\n      mergeMap(() =>\n        this.productService.getProducts().pipe(\n          map((products) =>\n            ProductApiActions.loadProductsSuccess({ products })\n          ),\n          catchError((error) =>\n            of(ProductApiActions.loadProductsFailure({ error }))\n          )\n        )\n      )\n    );\n  });\n\n  updateProduct$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductPageActions.updateProduct),\n      concatMap((action) =>\n        this.productService.updateProduct(action.product).pipe(\n          map((product) => ProductApiActions.updateProductSuccess({ product })),\n          catchError((error) =>\n            of(ProductApiActions.updateProductFailure({ error }))\n          )\n        )\n      )\n    );\n  });\n\n  createProduct$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductPageActions.createProduct),\n      concatMap((action) =>\n        this.productService.createProduct(action.product).pipe(\n          map((product) => ProductApiActions.createProductSuccess({ product })),\n          catchError((error) =>\n            of(ProductApiActions.createProductFailure({ error }))\n          )\n        )\n      )\n    );\n  });\n\n  deleteProduct$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(ProductPageActions.deleteProduct),\n      mergeMap((action) =>\n        this.productService.deleteProduct(action.productId).pipe(\n          map(() =>\n            ProductApiActions.deleteProductSuccess({\n              productId: action.productId,\n            })\n          ),\n          catchError((error) =>\n            of(ProductApiActions.deleteProductFailure({ error }))\n          )\n        )\n      )\n    );\n  });\n}\n","import { Product } from '../product';\n\n/* NgRx */\nimport { createReducer, on } from '@ngrx/store';\nimport { ProductApiActions, ProductPageActions } from './actions';\n\n// State for this feature (Product)\nexport interface ProductState {\n  showProductCode: boolean;\n  currentProductId: number | null;\n  products: Product[];\n  error: string;\n}\n\nconst initialState: ProductState = {\n  showProductCode: true,\n  currentProductId: null,\n  products: [],\n  error: '',\n};\n\nexport const productReducer = createReducer<ProductState>(\n  initialState,\n  on(ProductPageActions.toggleProductCode, (state): ProductState => {\n    return {\n      ...state,\n      showProductCode: !state.showProductCode,\n    };\n  }),\n  on(ProductPageActions.setCurrentProduct, (state, action): ProductState => {\n    return {\n      ...state,\n      currentProductId: action.currentProductId,\n    };\n  }),\n  on(ProductPageActions.clearCurrentProduct, (state): ProductState => {\n    return {\n      ...state,\n      currentProductId: null,\n    };\n  }),\n  on(ProductPageActions.initializeCurrentProduct, (state): ProductState => {\n    return {\n      ...state,\n      currentProductId: 0,\n    };\n  }),\n  on(ProductApiActions.loadProductsSuccess, (state, action): ProductState => {\n    return {\n      ...state,\n      products: action.products,\n      error: '',\n    };\n  }),\n  on(ProductApiActions.loadProductsFailure, (state, action): ProductState => {\n    return {\n      ...state,\n      products: [],\n      error: action.error,\n    };\n  }),\n  on(ProductApiActions.updateProductSuccess, (state, action): ProductState => {\n    const updatedProducts = state.products.map((item) =>\n      action.product.id === item.id ? action.product : item\n    );\n    return {\n      ...state,\n      products: updatedProducts,\n      currentProductId: action.product.id,\n      error: '',\n    };\n  }),\n  on(ProductApiActions.updateProductFailure, (state, action): ProductState => {\n    return {\n      ...state,\n      error: action.error,\n    };\n  }),\n  // After a create, the currentProduct is the new product.\n  on(ProductApiActions.createProductSuccess, (state, action): ProductState => {\n    return {\n      ...state,\n      products: [...state.products, action.product],\n      currentProductId: action.product.id,\n      error: '',\n    };\n  }),\n  on(ProductApiActions.createProductFailure, (state, action): ProductState => {\n    return {\n      ...state,\n      error: action.error,\n    };\n  }),\n  // After a delete, the currentProduct is null.\n  on(ProductApiActions.deleteProductSuccess, (state, action): ProductState => {\n    return {\n      ...state,\n      products: state.products.filter(\n        (product) => product.id !== action.productId\n      ),\n      currentProductId: null,\n      error: '',\n    };\n  }),\n  on(ProductApiActions.deleteProductFailure, (state, action): ProductState => {\n    return {\n      ...state,\n      error: action.error,\n    };\n  })\n);\n","import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n  // Provide the set of valid validation messages\n  // Stucture:\n  // controlName1: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // },\n  // controlName2: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // }\n  constructor(\n    private validationMessages: { [key: string]: { [key: string]: string } }\n  ) {}\n\n  // Processes each control within a FormGroup\n  // And returns a set of validation messages to display\n  // Structure\n  // controlName1: 'Validation Message.',\n  // controlName2: 'Validation Message.'\n  processMessages(container: FormGroup): { [key: string]: string } {\n    const messages = {};\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        const c = container.controls[controlKey];\n        // If it is a FormGroup, process its child controls.\n        if (c instanceof FormGroup) {\n          const childMessages = this.processMessages(c);\n          Object.assign(messages, childMessages);\n        } else {\n          // Only validate if there are validation messages for the control\n          if (this.validationMessages[controlKey]) {\n            messages[controlKey] = '';\n            if ((c.dirty || c.touched) && c.errors) {\n              Object.keys(c.errors).map((messageKey) => {\n                if (this.validationMessages[controlKey][messageKey]) {\n                  messages[controlKey] +=\n                    this.validationMessages[controlKey][messageKey] + ' ';\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n    return messages;\n  }\n}\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\n\nexport class NumberValidators {\n  static range(min: number, max: number): ValidatorFn {\n    return (c: AbstractControl): { [key: string]: boolean } | null => {\n      if (c.value && (isNaN(c.value) || c.value < min || c.value > max)) {\n        return { range: true };\n      }\n      return null;\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}