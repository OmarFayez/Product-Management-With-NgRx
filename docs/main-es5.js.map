{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/menu.component.ts","webpack:///src/app/home/menu.component.html","webpack:///src/app/home/page-not-found.component.ts","webpack:///src/app/home/shell.component.ts","webpack:///src/app/home/shell.component.html","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/products/product-data.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/user/auth.service.ts","webpack:///src/app/user/login.component.ts","webpack:///src/app/user/login.component.html","webpack:///src/app/user/state/actions/index.ts","webpack:///src/app/user/state/actions/user-page.actions.ts","webpack:///src/app/user/state/user.reducer.ts","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","children","loadChildren","m","ProductModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","instrument","name","maxAge","logOnly","production","declarations","bootstrap","MenuComponent","router","authService","pageTitle","isLoggedIn","currentUser","userName","logout","navigate","PageNotFoundComponent","template","ShellComponent","changeDetection","OnPush","WelcomeComponent","ProductData","products","productName","productCode","description","starRating","SharedModule","AuthService","password","isAdmin","providedIn","LoginComponent","store","maskUserName$","select","dispatch","maskUserName","loginForm","valid","form","value","login","redirectUrl","navigateByUrl","cancel","checkChanged","initialState","getUserFeatureState","getMaskUserName","state","getCurrentUser","userReducer","userRoutes","UserModule","forChild","forFeature","environment","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './user/auth-guard.service';\n\nimport { ShellComponent } from './home/shell.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { PageNotFoundComponent } from './home/page-not-found.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      { path: 'welcome', component: WelcomeComponent },\n      {\n        path: 'products',\n        // canActivate: [AuthGuard],\n        loadChildren: () =>\n          import('./products/product.module').then((m) => m.ProductModule),\n      },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n    ],\n  },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Imports for loading & configuring the in-memory web api\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { ProductData } from './products/product-data';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { ShellComponent } from './home/shell.component';\nimport { MenuComponent } from './home/menu.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { PageNotFoundComponent } from './home/page-not-found.component';\n\n/* Feature Modules */\nimport { UserModule } from './user/user.module';\n\n/* NgRx */\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(ProductData),\n    UserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}),\n    StoreDevtoolsModule.instrument({\n      name: 'APM Demo App DevTools',\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n  ],\n  declarations: [\n    AppComponent,\n    ShellComponent,\n    MenuComponent,\n    WelcomeComponent,\n    PageNotFoundComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  selector: 'pm-menu',\n  templateUrl: './menu.component.html',\n})\nexport class MenuComponent implements OnInit {\n  pageTitle = 'Product Management';\n\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  get userName(): string {\n    if (this.authService.currentUser) {\n      return this.authService.currentUser.userName;\n    }\n    return '';\n  }\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {}\n\n  logOut(): void {\n    this.authService.logout();\n    this.router.navigate(['/welcome']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\">{{ pageTitle }}</a>\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/welcome\">Home</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/products\">Product List</a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav navbar-right\">\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"nav-link\" routerLink=\"/login\">Welcome {{ userName }}</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n        <a class=\"nav-link\" routerLink=\"/login\">Log In</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"nav-link\" (click)=\"logOut()\" style=\"cursor: pointer\"\n          >Log Out</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\n\n@Component({\n  template: ` <h1>This is not the page you were looking for!</h1> `,\n})\nexport class PageNotFoundComponent {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pm-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShellComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<pm-menu></pm-menu>\n\n<div class=\"container main-content\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html',\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"mx-auto text-center\">\n        <img\n          src=\"./assets/images/ngrx.png\"\n          class=\"img-responsive\"\n          style=\"max-width: 80%; padding: 50px 0\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nimport { Product } from './product';\n\nexport class ProductData implements InMemoryDbService {\n  createDb() {\n    const products: Product[] = [\n      {\n        id: 1,\n        productName: 'Leaf Rake',\n        productCode: 'GDN-0011',\n        description: 'Leaf rake with 48-inch wooden handle',\n        starRating: 3.2,\n      },\n      {\n        id: 2,\n        productName: 'Garden Cart',\n        productCode: 'GDN-0023',\n        description: '15 gallon capacity rolling garden cart',\n        starRating: 4.2,\n      },\n      {\n        id: 5,\n        productName: 'Hammer',\n        productCode: 'TBX-0048',\n        description: 'Curved claw steel hammer',\n        starRating: 4.8,\n      },\n      {\n        id: 8,\n        productName: 'Saw',\n        productCode: 'TBX-0022',\n        description: '15-inch steel blade hand saw',\n        starRating: 3.7,\n      },\n      {\n        id: 10,\n        productName: 'Video Game Controller',\n        productCode: 'GMG-0042',\n        description: 'Standard two-button video game controller',\n        starRating: 4.6,\n      },\n    ];\n    return { products };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CommonModule, FormsModule, ReactiveFormsModule],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  currentUser: User | null;\n  redirectUrl: string;\n\n  constructor() {}\n\n  isLoggedIn(): boolean {\n    return !!this.currentUser;\n  }\n\n  login(userName: string, password: string): void {\n    // Code here would log into a back end service\n    // and return user information\n    // This is just hard-coded here.\n    this.currentUser = {\n      id: 2,\n      userName,\n      isAdmin: false,\n    };\n  }\n\n  logout(): void {\n    this.currentUser = null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n/* NgRx */\nimport { Store } from '@ngrx/store';\nimport { State } from '../state/app.state';\nimport { getMaskUserName } from './state/user.reducer';\nimport { UserPageActions } from './state/actions';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  pageTitle = 'Log In';\n\n  maskUserName$: Observable<boolean>;\n\n  constructor(\n    private store: Store<State>,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.maskUserName$ = this.store.select(getMaskUserName);\n  }\n\n  cancel(): void {\n    this.router.navigate(['welcome']);\n  }\n\n  checkChanged(): void {\n    this.store.dispatch(UserPageActions.maskUserName());\n  }\n\n  login(loginForm: NgForm): void {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.authService.login(userName, password);\n\n      if (this.authService.redirectUrl) {\n        this.router.navigateByUrl(this.authService.redirectUrl);\n      } else {\n        this.router.navigate(['/products']);\n      }\n    }\n  }\n}\n","<div class=\"container main-content\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      {{ pageTitle }}\n    </div>\n\n    <div class=\"card-body\">\n      <form\n        class=\"needs-validation\"\n        novalidate\n        (ngSubmit)=\"login(loginForm)\"\n        #loginForm=\"ngForm\"\n        autocomplete=\"off\"\n      >\n        <fieldset>\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"userNameId\"\n              >User Name</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (userNameVar.touched || userNameVar.dirty) &&\n                    !userNameVar.valid\n                }\"\n                id=\"userNameId\"\n                [type]=\"(maskUserName$ | async) ? 'password' : 'text'\"\n                placeholder=\"User Name (required)\"\n                required\n                ngModel\n                name=\"userName\"\n                #userNameVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (userNameVar.touched || userNameVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                User name is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"passwordId\"\n              >Password</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (passwordVar.touched || passwordVar.dirty) &&\n                    !passwordVar.valid\n                }\"\n                id=\"passwordId\"\n                type=\"password\"\n                placeholder=\"Password (required)\"\n                required\n                ngModel\n                name=\"password\"\n                #passwordVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (passwordVar.touched || passwordVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                Password is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <span>\n              <button\n                class=\"btn btn-primary\"\n                type=\"submit\"\n                style=\"min-width: 120px; margin-right: 10px\"\n                [disabled]=\"!loginForm.valid\"\n              >\n                Log In\n              </button>\n            </span>\n            <span>\n              <a\n                class=\"btn btn-light\"\n                style=\"min-width: 120px\"\n                (click)=\"cancel()\"\n              >\n                Cancel\n              </a>\n            </span>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row\">\n        <div class=\"form-check col-md-7\">\n          <label>\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              (change)=\"checkChanged()\"\n              [checked]=\"maskUserName$ | async\"\n            />\n            Mask user name\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import * as UserPageActions from './user-page.actions';\n\nexport { UserPageActions };\n","/* NgRx */\nimport { createAction } from '@ngrx/store';\n\nexport const maskUserName = createAction('[User Page] Mask User Name');\n","// Homework\nimport { User } from '../user';\n\n/* NgRx */\nimport {\n  createReducer,\n  on,\n  createFeatureSelector,\n  createSelector,\n} from '@ngrx/store';\nimport { UserPageActions } from './actions';\n\n// State for this feature (User)\nexport interface UserState {\n  maskUserName: boolean;\n  currentUser: User;\n}\n\nconst initialState: UserState = {\n  maskUserName: true,\n  currentUser: null,\n};\n\n// Selector functions\nconst getUserFeatureState = createFeatureSelector<UserState>('users');\n\nexport const getMaskUserName = createSelector(\n  getUserFeatureState,\n  (state) => state.maskUserName\n);\n\nexport const getCurrentUser = createSelector(\n  getUserFeatureState,\n  (state) => state.currentUser\n);\n\nexport const userReducer = createReducer<UserState>(\n  initialState,\n  on(UserPageActions.maskUserName, (state): UserState => {\n    return {\n      ...state,\n      maskUserName: !state.maskUserName,\n    };\n  })\n);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { LoginComponent } from './login.component';\n\n/* NgRx */\nimport { StoreModule } from '@ngrx/store';\nimport { userReducer } from './state/user.reducer';\n\nconst userRoutes: Routes = [{ path: 'login', component: LoginComponent }];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(userRoutes),\n    StoreModule.forFeature('users', userReducer),\n  ],\n  declarations: [LoginComponent],\n})\nexport class UserModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}