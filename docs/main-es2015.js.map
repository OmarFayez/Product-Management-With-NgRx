{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/menu.component.ts","./src/app/home/menu.component.html","./src/app/home/page-not-found.component.ts","./src/app/home/shell.component.ts","./src/app/home/shell.component.html","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/app/products/product-data.ts","./src/app/shared/shared.module.ts","./src/app/user/auth.service.ts","./src/app/user/login.component.ts","./src/app/user/login.component.html","./src/app/user/state/actions/index.ts","./src/app/user/state/actions/user-page.actions.ts","./src/app/user/state/user.reducer.ts","./src/app/user/user.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './user/auth-guard.service';\n\nimport { ShellComponent } from './home/shell.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { PageNotFoundComponent } from './home/page-not-found.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      { path: 'welcome', component: WelcomeComponent },\n      {\n        path: 'products',\n        // canActivate: [AuthGuard],\n        loadChildren: () =>\n          import('./products/product.module').then((m) => m.ProductModule),\n      },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n    ],\n  },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pm-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Imports for loading & configuring the in-memory web api\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\nimport { ProductData } from './products/product-data';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { ShellComponent } from './home/shell.component';\nimport { MenuComponent } from './home/menu.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { PageNotFoundComponent } from './home/page-not-found.component';\n\n/* Feature Modules */\nimport { UserModule } from './user/user.module';\n\n/* NgRx */\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(ProductData),\n    UserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}),\n    StoreDevtoolsModule.instrument({\n      name: 'APM Demo App DevTools',\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n  ],\n  declarations: [\n    AppComponent,\n    ShellComponent,\n    MenuComponent,\n    WelcomeComponent,\n    PageNotFoundComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  selector: 'pm-menu',\n  templateUrl: './menu.component.html',\n})\nexport class MenuComponent implements OnInit {\n  pageTitle = 'Product Management';\n\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  get userName(): string {\n    if (this.authService.currentUser) {\n      return this.authService.currentUser.userName;\n    }\n    return '';\n  }\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  ngOnInit() {}\n\n  logOut(): void {\n    this.authService.logout();\n    this.router.navigate(['/welcome']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\">{{ pageTitle }}</a>\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/welcome\">Home</a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\">\n        <a class=\"nav-link\" routerLink=\"/products\">Product List</a>\n      </li>\n    </ul>\n    <ul class=\"navbar-nav navbar-right\">\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"nav-link\" routerLink=\"/login\">Welcome {{ userName }}</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"!isLoggedIn\">\n        <a class=\"nav-link\" routerLink=\"/login\">Log In</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"isLoggedIn\">\n        <a class=\"nav-link\" (click)=\"logOut()\" style=\"cursor: pointer\"\n          >Log Out</a\n        >\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component } from '@angular/core';\n\n@Component({\n  template: ` <h1>This is not the page you were looking for!</h1> `,\n})\nexport class PageNotFoundComponent {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pm-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShellComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<pm-menu></pm-menu>\n\n<div class=\"container main-content\">\n  <router-outlet></router-outlet>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  templateUrl: './welcome.component.html',\n})\nexport class WelcomeComponent {\n  public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"mx-auto text-center\">\n        <img\n          src=\"./assets/images/ngrx.png\"\n          class=\"img-responsive\"\n          style=\"max-width: 80%; padding: 50px 0\"\n        />\n      </div>\n    </div>\n  </div>\n</div>\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nimport { Product } from './product';\n\nexport class ProductData implements InMemoryDbService {\n  createDb() {\n    const products: Product[] = [\n      {\n        id: 1,\n        productName: 'Leaf Rake',\n        productCode: 'GDN-0011',\n        description: 'Leaf rake with 48-inch wooden handle',\n        starRating: 3.2,\n      },\n      {\n        id: 2,\n        productName: 'Garden Cart',\n        productCode: 'GDN-0023',\n        description: '15 gallon capacity rolling garden cart',\n        starRating: 4.2,\n      },\n      {\n        id: 5,\n        productName: 'Hammer',\n        productCode: 'TBX-0048',\n        description: 'Curved claw steel hammer',\n        starRating: 4.8,\n      },\n      {\n        id: 8,\n        productName: 'Saw',\n        productCode: 'TBX-0022',\n        description: '15-inch steel blade hand saw',\n        starRating: 3.7,\n      },\n      {\n        id: 10,\n        productName: 'Video Game Controller',\n        productCode: 'GMG-0042',\n        description: 'Standard two-button video game controller',\n        starRating: 4.6,\n      },\n    ];\n    return { products };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CommonModule, FormsModule, ReactiveFormsModule],\n})\nexport class SharedModule {}\n","import { Injectable } from '@angular/core';\n\nimport { User } from './user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  currentUser: User | null;\n  redirectUrl: string;\n\n  constructor() {}\n\n  isLoggedIn(): boolean {\n    return !!this.currentUser;\n  }\n\n  login(userName: string, password: string): void {\n    // Code here would log into a back end service\n    // and return user information\n    // This is just hard-coded here.\n    this.currentUser = {\n      id: 2,\n      userName,\n      isAdmin: false,\n    };\n  }\n\n  logout(): void {\n    this.currentUser = null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth.service';\n\n/* NgRx */\nimport { Store } from '@ngrx/store';\nimport { State } from '../state/app.state';\nimport { getMaskUserName } from './state/user.reducer';\nimport { UserPageActions } from './state/actions';\n\n@Component({\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  pageTitle = 'Log In';\n\n  maskUserName$: Observable<boolean>;\n\n  constructor(\n    private store: Store<State>,\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.maskUserName$ = this.store.select(getMaskUserName);\n  }\n\n  cancel(): void {\n    this.router.navigate(['welcome']);\n  }\n\n  checkChanged(): void {\n    this.store.dispatch(UserPageActions.maskUserName());\n  }\n\n  login(loginForm: NgForm): void {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.authService.login(userName, password);\n\n      if (this.authService.redirectUrl) {\n        this.router.navigateByUrl(this.authService.redirectUrl);\n      } else {\n        this.router.navigate(['/products']);\n      }\n    }\n  }\n}\n","<div class=\"container main-content\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      {{ pageTitle }}\n    </div>\n\n    <div class=\"card-body\">\n      <form\n        class=\"needs-validation\"\n        novalidate\n        (ngSubmit)=\"login(loginForm)\"\n        #loginForm=\"ngForm\"\n        autocomplete=\"off\"\n      >\n        <fieldset>\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"userNameId\"\n              >User Name</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (userNameVar.touched || userNameVar.dirty) &&\n                    !userNameVar.valid\n                }\"\n                id=\"userNameId\"\n                [type]=\"(maskUserName$ | async) ? 'password' : 'text'\"\n                placeholder=\"User Name (required)\"\n                required\n                ngModel\n                name=\"userName\"\n                #userNameVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (userNameVar.touched || userNameVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                User name is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"passwordId\"\n              >Password</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (passwordVar.touched || passwordVar.dirty) &&\n                    !passwordVar.valid\n                }\"\n                id=\"passwordId\"\n                type=\"password\"\n                placeholder=\"Password (required)\"\n                required\n                ngModel\n                name=\"password\"\n                #passwordVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (passwordVar.touched || passwordVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                Password is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <span>\n              <button\n                class=\"btn btn-primary\"\n                type=\"submit\"\n                style=\"min-width: 120px; margin-right: 10px\"\n                [disabled]=\"!loginForm.valid\"\n              >\n                Log In\n              </button>\n            </span>\n            <span>\n              <a\n                class=\"btn btn-light\"\n                style=\"min-width: 120px\"\n                (click)=\"cancel()\"\n              >\n                Cancel\n              </a>\n            </span>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row\">\n        <div class=\"form-check col-md-7\">\n          <label>\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              (change)=\"checkChanged()\"\n              [checked]=\"maskUserName$ | async\"\n            />\n            Mask user name\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import * as UserPageActions from './user-page.actions';\n\nexport { UserPageActions };\n","/* NgRx */\nimport { createAction } from '@ngrx/store';\n\nexport const maskUserName = createAction('[User Page] Mask User Name');\n","// Homework\nimport { User } from '../user';\n\n/* NgRx */\nimport {\n  createReducer,\n  on,\n  createFeatureSelector,\n  createSelector,\n} from '@ngrx/store';\nimport { UserPageActions } from './actions';\n\n// State for this feature (User)\nexport interface UserState {\n  maskUserName: boolean;\n  currentUser: User;\n}\n\nconst initialState: UserState = {\n  maskUserName: true,\n  currentUser: null,\n};\n\n// Selector functions\nconst getUserFeatureState = createFeatureSelector<UserState>('users');\n\nexport const getMaskUserName = createSelector(\n  getUserFeatureState,\n  (state) => state.maskUserName\n);\n\nexport const getCurrentUser = createSelector(\n  getUserFeatureState,\n  (state) => state.currentUser\n);\n\nexport const userReducer = createReducer<UserState>(\n  initialState,\n  on(UserPageActions.maskUserName, (state): UserState => {\n    return {\n      ...state,\n      maskUserName: !state.maskUserName,\n    };\n  })\n);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { LoginComponent } from './login.component';\n\n/* NgRx */\nimport { StoreModule } from '@ngrx/store';\nimport { userReducer } from './state/user.reducer';\n\nconst userRoutes: Routes = [{ path: 'login', component: LoginComponent }];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(userRoutes),\n    StoreModule.forFeature('users', userReducer),\n  ],\n  declarations: [LoginComponent],\n})\nexport class UserModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":"webpack:///"}